name: Feedback Worker CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'feedback-worker/**'
      - 'feedback-api/**'
      - '.github/workflows/feedback-worker.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'feedback-worker/**'
      - 'feedback-api/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_API: ${{ github.repository }}-feedback-api
  IMAGE_NAME_WORKER: ${{ github.repository }}-feedback-worker

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Test feedback worker
      working-directory: ./feedback-worker
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install -r requirements.txt
        uv pip install pytest pytest-asyncio
        python -m pytest tests/ -v || true  # Allow failure for now
    
    - name: Lint with ruff
      working-directory: ./feedback-worker
      run: |
        source .venv/bin/activate
        uv pip install ruff
        ruff check . || true  # Allow failure for now

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push API image
      uses: docker/build-push-action@v5
      with:
        context: ./feedback-api
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_API }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_API }}:${{ github.sha }}
    
    - name: Build and push Worker image
      uses: docker/build-push-action@v5
      with:
        context: ./feedback-worker
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_WORKER }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_WORKER }}:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to production
      run: |
        echo "Deploy to production server via SSH or webhook"
        # Add actual deployment steps here
        # Example: SSH to server and run docker-compose pull && docker-compose up -d