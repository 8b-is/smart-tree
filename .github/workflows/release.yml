name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: stree

jobs:
  build:
    name: Build for ${{ matrix.os }} (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            use-cross: true
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            use-cross: true
          - os: macos-latest
            target: x86_64-apple-darwin
            use-cross: false
          - os: macos-latest
            target: aarch64-apple-darwin
            use-cross: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install cross (for cross-compilation)
        if: matrix.use-cross == true
        run: cargo install cross --git https://github.com/cross-rs/cross --branch main

      - name: Build binary
        run: |
          if [[ "${{ matrix.use-cross }}" == "true" ]]; then
            cross build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi
        env:
          CARGO_TARGET_${{ matrix.target | upper | replace '-' '_' }}_RUNNER: ""

      - name: Package binary
        run: |
          cd target/${{ matrix.target }}/release
          tar -czvf ../../../${{ env.BINARY_NAME }}-${{ github.ref_name }}-${{ matrix.target }}.tar.gz ${{ env.BINARY_NAME }}
          cd -

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BINARY_NAME }}-${{ github.ref_name }}-${{ matrix.target }}
          path: ${{ env.BINARY_NAME }}-${{ github.ref_name }}-${{ matrix.target }}.tar.gz

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body: |
            New release of Smart Tree!

            To install, run the following command in your terminal:
            ```bash
            curl -sSL https://raw.githubusercontent.com/8b-is/smart-tree/main/scripts/install.sh | bash
            ```
          files: artifacts/*/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 