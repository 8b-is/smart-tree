[project]
name = "tmux-ai-assistant"
version = "2.1.0"
description = "AI-powered tmux session monitoring and assistance - Your partner in terminal productivity! 🚀"
readme = "README.md"
requires-python = ">=3.13"
license = {text = "MIT"}
authors = [
    {name = "Hue", email = "hue@8b.is"},
]
maintainers = [
    {name = "Aye & Hue Partnership", email = "aye@8b.is"},
]
keywords = ["tmux", "ai", "assistant", "monitoring", "terminal", "productivity"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
]

dependencies = [
    # Core dependencies - The heart of our operation! 💗
    "openai>=1.60.0",
    "python-dotenv>=1.0.0",
    "libtmux>=0.40.0",
    "watchdog>=6.0.0",
    "click>=8.1.0",
    "pyyaml>=6.0",
    "colorama>=0.4.6",
    "ollama>=0.3.0",  # Trisha's budget-friendly choice for local LLMs!
    "paramiko>=3.5.1",  # SSH connections for remote tmux - tai.is magic! 🌐
    "cryptography>=42.0.0",
    "pyjwt>=2.8.0",
    
    # MCP Server dependencies - Making connections everywhere! 🌟
    "google-generativeai>=0.7.0",
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "sse-starlette>=2.1.0",
    
    # Web interface dependencies - The show must go on! 🎪
    "aiohttp>=3.9.0",
    "aiohttp-cors>=0.7.0",
    "websockets>=12.0",
]

[project.optional-dependencies]
dev = [
    # Development tools - Keeping our code ship-shape! ⚓
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.0.0",
    "flake8>=7.0.0",
    "mypy>=1.0.0",
    "ruff>=0.8.0",  # Modern linting - Aye's favorite!
]

test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
]

[project.urls]
Homepage = "https://github.com/hue/tmux-ai-assistant"
Documentation = "https://github.com/hue/tmux-ai-assistant#readme"
Repository = "https://github.com/hue/tmux-ai-assistant.git"
Issues = "https://github.com/hue/tmux-ai-assistant/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    # Additional dev tools that uv manages separately
    "ipython>=8.0.0",  # For interactive debugging
    "pre-commit>=3.5.0",  # Git hooks for code quality
]

[tool.black]
line-length = 100
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.venv
  | build
  | dist
  | htmlcov
)/
'''

[tool.ruff]
line-length = 100
target-version = "py313"
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "I",  # isort
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --color=yes"
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["tmux_ai_assistant"]
omit = ["*/tests/*", "*/__pycache__/*", "*/venv/*", "*/.venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]